---
import Button from '../ui/Button.astro';
import { MESES } from '../../types/gasto';
import { useCurrency } from '../../hooks/useCurrency';
---

<form id="addGastoForm" class="flex flex-wrap gap-6 items-start mb-6 p-6 border border-gray-200 rounded-xl shadow-sm bg-white transition-all hover:shadow-md">
  <div class="flex-1 min-w-[200px] group">
    <label for="amount" class="block mb-2 font-medium text-gray-700 group-hover:text-indigo-600 transition-colors">Gasto:</label>
    <div class="relative">
      <span id="currencySymbol" class="absolute left-3 top-1/2 -translate-y-1/2 text-gray-500">$</span>
      <input 
        type="number" 
        id="amount" 
        name="amount"
        min="0" 
        step="0.01" 
        class="w-full p-3 pl-8 border rounded-lg bg-gray-50 focus:ring-2 focus:ring-indigo-200 focus:border-indigo-500 focus:bg-white outline-none transition-all"
        placeholder="0.00"
        required
      />
      <div class="absolute h-1 w-0 bg-indigo-500 bottom-0 left-0 transition-all duration-300 group-hover:w-full rounded-b-lg opacity-50"></div>
    </div>
  </div>
  
  <div class="flex-1 min-w-[200px] group">
    <label for="description" class="block mb-2 font-medium text-gray-700 group-hover:text-indigo-600 transition-colors">Descripción:</label>
    <input 
      type="text" 
      id="description" 
      name="description"
      class="w-full p-3 border rounded-lg bg-gray-50 focus:ring-2 focus:ring-indigo-200 focus:border-indigo-500 focus:bg-white outline-none transition-all"
      placeholder="Descripción del gasto"
      required
    />
    <div class="absolute h-1 w-0 bg-indigo-500 bottom-0 left-0 transition-all duration-300 group-hover:w-full rounded-b-lg opacity-50"></div>
  </div>
  
  <div class="flex-1 min-w-[200px] group">
    <label for="month" class="block mb-2 font-medium text-gray-700 group-hover:text-indigo-600 transition-colors">Mes:</label>
    <select 
      id="month" 
      name="month"
      class="w-full p-3 border rounded-lg bg-gray-50 focus:ring-2 focus:ring-indigo-200 focus:border-indigo-500 focus:bg-white outline-none transition-all appearance-none"
      required
    >
      <option value="">Selecciona un mes</option>
      {MESES.map((mes) => (
        <option value={mes}>{mes}</option>
      ))}
    </select>
    <div class="absolute h-1 w-0 bg-indigo-500 bottom-0 left-0 transition-all duration-300 group-hover:w-full rounded-b-lg opacity-50"></div>
  </div>
  
  <div class="flex-1 min-w-[200px] group">
    <label for="person" class="block mb-2 font-medium text-gray-700 group-hover:text-indigo-600 transition-colors">Persona:</label>
    <select 
      id="person" 
      name="person"
      class="w-full p-3 border rounded-lg bg-gray-50 focus:ring-2 focus:ring-indigo-200 focus:border-indigo-500 focus:bg-white outline-none transition-all appearance-none"
      required
    >
      <option value="">Selecciona una persona</option>
    </select>
    <div class="absolute h-1 w-0 bg-indigo-500 bottom-0 left-0 transition-all duration-300 group-hover:w-full rounded-b-lg opacity-50"></div>
  </div>
  
  <div class="flex-1 min-w-[200px] group">
    <label class="block mb-2 font-medium text-gray-700 group-hover:text-indigo-600 transition-colors">
      <input 
        type="checkbox" 
        id="shared" 
        name="shared"
        class="mr-2"
      />
      Gasto compartido
    </label>
  </div>
  
  <div class="flex-1 min-w-[200px] group shared-percentage hidden">
    <label for="percentage1" class="block mb-2 font-medium text-gray-700 group-hover:text-indigo-600 transition-colors">Porcentaje Persona 1:</label>
    <input 
      type="number" 
      id="percentage1" 
      name="percentage1"
      min="0" 
      max="100" 
      value="50"
      class="w-full p-3 border rounded-lg bg-gray-50 focus:ring-2 focus:ring-indigo-200 focus:border-indigo-500 focus:bg-white outline-none transition-all"
    />
    <div class="absolute h-1 w-0 bg-indigo-500 bottom-0 left-0 transition-all duration-300 group-hover:w-full rounded-b-lg opacity-50"></div>
  </div>
  
  <div class="flex-1 min-w-[200px] group shared-percentage hidden">
    <label for="percentage2" class="block mb-2 font-medium text-gray-700 group-hover:text-indigo-600 transition-colors">Porcentaje Persona 2:</label>
    <input 
      type="number" 
      id="percentage2" 
      name="percentage2"
      min="0" 
      max="100" 
      value="50"
      class="w-full p-3 border rounded-lg bg-gray-50 focus:ring-2 focus:ring-indigo-200 focus:border-indigo-500 focus:bg-white outline-none transition-all"
    />
    <div class="absolute h-1 w-0 bg-indigo-500 bottom-0 left-0 transition-all duration-300 group-hover:w-full rounded-b-lg opacity-50"></div>
  </div>
  
  <div class="w-full flex justify-end">
    <Button type="submit" class="bg-indigo-600 hover:bg-indigo-700 text-white">
      Agregar Gasto
    </Button>
  </div>
</form>

<script>
  const form = document.getElementById('addGastoForm');
  const amountInput = document.getElementById('amount') as HTMLInputElement;
  const descInput = document.getElementById('description') as HTMLInputElement;
  const monthSelect = document.getElementById('month') as HTMLSelectElement;
  const personaSelect = document.getElementById('person') as HTMLSelectElement;
  const sharedCheck = document.getElementById('shared') as HTMLInputElement;
  const percentage1Input = document.getElementById('percentage1') as HTMLInputElement;
  const percentage2Input = document.getElementById('percentage2') as HTMLInputElement;
  const sharedPercentageDivs = document.querySelectorAll('.shared-percentage');
  const currencySymbol = document.getElementById('currencySymbol');
  
  if (sharedCheck) {
    sharedCheck.addEventListener('change', () => {
      sharedPercentageDivs.forEach(div => {
        div.classList.toggle('hidden', !sharedCheck.checked);
      });
    });
  }
  
  if (form) {
    form.addEventListener('submit', (e) => {
      e.preventDefault();
      
      const amount = parseFloat(amountInput.value);
      const description = descInput.value;
      const month = monthSelect.value;
      const personaid = personaSelect.value;
      const escompartido = sharedCheck.checked;
      const porcentaje1 = parseInt(percentage1Input.value) || 50;
      const porcentaje2 = parseInt(percentage2Input.value) || 50;
      
      const gastoData = {
        mes: month,
        descripcion: description,
        monto: amount,
        personaid,
        escompartido,
        porcentajepersona1: escompartido ? porcentaje1 : undefined,
        porcentajepersona2: escompartido ? porcentaje2 : undefined
      };
      
      const event = new CustomEvent('nuevoGasto', {
        detail: gastoData
      });
      document.dispatchEvent(event);
      
      form.reset();
      sharedPercentageDivs.forEach(div => {
        div.classList.add('hidden');
      });
    });
  }
  
  document.addEventListener('personasActualizadas', (e: Event) => {
    const customEvent = e as CustomEvent;
    if (customEvent.detail?.personas) {
      const personasActualizadas = customEvent.detail.personas;
      
      if (personaSelect) {
        personaSelect.innerHTML = '';
        
        const defaultOption = document.createElement('option');
        defaultOption.value = '';
        defaultOption.text = 'Selecciona una persona';
        defaultOption.disabled = true;
        defaultOption.selected = true;
        personaSelect.appendChild(defaultOption);
        
        personasActualizadas.forEach((persona: any) => {
          const option = document.createElement('option');
          option.value = persona.id;
          option.text = persona.nombre;
          personaSelect.appendChild(option);
        });
      }
    }
  });
  
  document.addEventListener('currencyChanged', (e: Event) => {
    const customEvent = e as CustomEvent;
    const newCurrency = customEvent.detail.currency;
    
    let currencySymbolChar = '$';
    switch (newCurrency) {
      case 'EUR':
        currencySymbolChar = '€';
        break;
      case 'GBP':
        currencySymbolChar = '£';
        break;
      case 'JPY':
        currencySymbolChar = '¥';
        break;
      default:
        currencySymbolChar = '$';
    }
    
    if (currencySymbol) {
      currencySymbol.textContent = currencySymbolChar;
    }
  });
</script> 