import{j as y}from"./jsx-runtime.D_zvdyIk.js";import{r as c}from"./index.BVOCwoKb.js";import{s as i}from"./supabase.4P1wv7wr.js";import C from"./LoadingSpinner.D7PxHcXC.js";const U=async()=>{const{data:t,error:s}=await i.from("personas").select("*");if(s)throw console.error("Error al obtener personas:",s),s;return t||[]},v=async()=>{const{data:t,error:s}=await i.from("gastos").select("*");if(s)throw console.error("Error al obtener gastos:",s),s;return(t||[]).map(r=>({...r,fecha:new Date(r.fecha),fechaCreacion:r.fechaCreacion?new Date(r.fechaCreacion):void 0,fechaActualizacion:r.fechaActualizacion?new Date(r.fechaActualizacion):void 0}))},x=async t=>{if(!t.usuarioid)throw new Error("El usuario_id es requerido para crear un gasto");const{data:s,error:r}=await i.from("gastos").insert({...t,fecha:t.fecha.toISOString().split("T")[0],usuarioid:t.usuarioid}).select().single();if(r)throw console.error("Error al crear gasto:",r),r;return{...s,fecha:new Date(s.fecha),fechaCreacion:s.fechaCreacion?new Date(s.fechaCreacion):void 0,fechaActualizacion:s.fechaActualizacion?new Date(s.fechaActualizacion):void 0}},N=async t=>{const{error:s}=await i.from("gastos").delete().eq("id",t);if(s)throw console.error("Error al eliminar gasto:",s),s},$=async(t,s)=>{const{error:r}=await i.from("personas").update({sueldo:s}).eq("id",t);if(r)throw console.error("Error al actualizar sueldo:",r),r},A=async(t,s)=>{const{error:r}=await i.from("personas").update({nombre:s}).eq("id",t);if(r)throw console.error("Error al actualizar nombre:",r),r},w="user_preferences",p={currency:"USD",theme:"light",language:"es"},G=()=>{if(typeof window>"u")return p;const t=localStorage.getItem(w);if(!t)return localStorage.setItem(w,JSON.stringify(p)),p;try{return JSON.parse(t)}catch{return p}},I=t=>{const r={...G(),...t};return localStorage.setItem(w,JSON.stringify(r)),r},b=c.createContext(void 0);function H({children:t}){const[s,r]=c.useState([]),[P,l]=c.useState([]),[f,d]=c.useState(!0),[u,E]=c.useState(null),[j,S]=c.useState(null),[m,g]=c.useState(!1);c.useEffect(()=>{let e=!0;(async()=>{try{const{data:n}=await i.auth.getSession();e&&(E(n.session?.user||null),g(!0))}catch(n){console.error("Error initializing auth:",n),e&&g(!0)}})();const{data:{subscription:o}}=i.auth.onAuthStateChange((n,h)=>{e&&E(h?.user||null)});return()=>{e=!1,o.unsubscribe()}},[]),c.useEffect(()=>{m&&u&&z()},[u,m]);const z=async()=>{if(u){d(!0);try{const[e,a,o]=await Promise.all([v(),U(),G()]);a&&a.length>0?(r(e),l(a),S(o)):(console.error("No personas found in database"),r([]),l([]))}catch(e){console.error("Error al cargar datos:",e),r([]),l([])}finally{d(!1)}}},D={gastos:s,personas:P,isLoading:f,userPreferences:j,agregarGasto:async e=>{if(!u)throw new Error("Usuario no autenticado");try{const a=await x({...e,personaid:e.personaid,escompartido:e.escompartido,porcentajepersona1:e.porcentajepersona1,porcentajepersona2:e.porcentajepersona2,fecha:new Date,usuarioid:u.id});r(o=>[...o,a])}catch(a){throw console.error("Error al agregar gasto:",a),a}},eliminarGasto:async e=>{try{await N(e),r(a=>a.filter(o=>o.id!==e))}catch(a){throw console.error("Error al eliminar gasto:",a),a}},actualizarSueldoPersona:async(e,a)=>{try{await $(e,a),l(o=>o.map(n=>n.id===e?{...n,sueldo:a}:n))}catch(o){throw console.error("Error al actualizar sueldo:",o),o}},actualizarNombrePersona:async(e,a)=>{try{await A(e,a),l(o=>o.map(n=>n.id===e?{...n,nombre:a}:n))}catch(o){throw console.error("Error al actualizar nombre:",o),o}},obtenerTotalGastosPorPersona:e=>s.reduce((a,o)=>o.personaid===e?a+o.monto:o.escompartido&&o.porcentajepersona1&&o.porcentajepersona2?a+o.monto*(e==="persona1"?o.porcentajepersona1:o.porcentajepersona2)/100:a,0),calcularPorcentajeGasto:(e,a)=>{const o=e+a;if(o===0)return{porcentajePersona1:50,porcentajePersona2:50};const n=Math.round(e/o*100),h=100-n;return{porcentajePersona1:n,porcentajePersona2:h}},recargarDatos:async()=>{await z()},updateUserPreferences:async e=>{try{if(!u){console.error("No user found when updating preferences");return}const a=await I(e);a?S(a):console.error("Failed to update user preferences")}catch(a){console.error("Error al actualizar preferencias:",a)}}};return m?y.jsx(b.Provider,{value:D,children:t}):y.jsx("div",{className:"flex justify-center items-center h-64",children:y.jsx(C,{size:"large",color:"primary"})})}function R(){const t=c.useContext(b);if(t===void 0)throw new Error("useGastos debe ser usado dentro de un GastosProvider");return t}const F={USD:"$",EUR:"€",GBP:"£",JPY:"¥",ARS:"$",BRL:"R$",MXN:"$"},Q=()=>{const{userPreferences:t,updateUserPreferences:s}=R(),r=t?.currency??"USD";return c.useEffect(()=>{localStorage.setItem("currency",r)},[r]),{currency:r,setCurrency:async f=>{t&&await s({...t,currency:f})},formatCurrency:f=>{const d=F[r]||"$";return new Intl.NumberFormat("es-AR",{style:"currency",currency:r,minimumFractionDigits:2,maximumFractionDigits:2}).format(f).replace(r,d)}}};export{H as G,Q as a,R as u};
