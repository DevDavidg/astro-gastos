import{j as g}from"./jsx-runtime.D_zvdyIk.js";import{r as i}from"./index.BVOCwoKb.js";import{s as u}from"./supabase.4P1wv7wr.js";import U from"./LoadingSpinner.D7PxHcXC.js";const $=async()=>{const{data:s,error:t}=await u.from("personas").select("*");if(t)throw console.error("Error al obtener personas:",t),t;return s||[]},J=async()=>{const{data:s,error:t}=await u.from("gastos").select("*");if(t)throw console.error("Error al obtener gastos:",t),t;return(s||[]).map(a=>({...a,fecha:new Date(a.fecha),fechaCreacion:a.fechaCreacion?new Date(a.fechaCreacion):void 0,fechaActualizacion:a.fechaActualizacion?new Date(a.fechaActualizacion):void 0}))},k=async s=>{if(!s.usuarioid)throw new Error("El usuario_id es requerido para crear un gasto");const{data:t,error:a}=await u.from("gastos").insert({...s,fecha:s.fecha.toISOString().split("T")[0],usuarioid:s.usuarioid}).select().single();if(a)throw console.error("Error al crear gasto:",a),a;return{...t,fecha:new Date(t.fecha),fechaCreacion:t.fechaCreacion?new Date(t.fechaCreacion):void 0,fechaActualizacion:t.fechaActualizacion?new Date(t.fechaActualizacion):void 0}},M=async s=>{const{error:t}=await u.from("gastos").delete().eq("id",s);if(t)throw console.error("Error al eliminar gasto:",t),t},A=async(s,t)=>{const{error:a}=await u.from("personas").update({sueldo:t}).eq("id",s);if(a)throw console.error("Error al actualizar sueldo:",a),a},O=async(s,t)=>{const{error:a}=await u.from("personas").update({nombre:t}).eq("id",s);if(a)throw console.error("Error al actualizar nombre:",a),a},P="user_preferences",p={currency:"USD",theme:"light",language:"es"},I=()=>{if(typeof window>"u")return p;const s=localStorage.getItem(P);if(!s)return localStorage.setItem(P,JSON.stringify(p)),p;try{return JSON.parse(s)}catch{return p}},T=s=>{const a={...I(),...s};return localStorage.setItem(P,JSON.stringify(a)),a},D=i.createContext(void 0);function X({children:s}){const[t,a]=i.useState([]),[y,f]=i.useState([]),[N,E]=i.useState(!0),[d,j]=i.useState(null),[x,z]=i.useState(null),[m,S]=i.useState(!1);i.useEffect(()=>{let o=!0;(async()=>{try{const{data:n}=await u.auth.getSession();o&&(j(n.session?.user||null),S(!0))}catch(n){console.error("Error initializing auth:",n),o&&S(!0)}})();const{data:{subscription:e}}=u.auth.onAuthStateChange((n,c)=>{o&&j(c?.user||null)});return()=>{o=!1,e.unsubscribe()}},[]),i.useEffect(()=>{m&&d&&b()},[d,m]);const b=async()=>{if(d){E(!0);try{const[o,r,e]=await Promise.all([J(),$(),I()]);r&&r.length>0?(a(o),f(r),z(e)):(console.error("No personas found in database"),a([]),f([]))}catch(o){console.error("Error al cargar datos:",o),a([]),f([])}finally{E(!1)}}},v=async()=>{await b()},C={gastos:t,personas:y,isLoading:N,userPreferences:x,agregarGasto:async o=>{if(!d)throw new Error("Usuario no autenticado");try{const{otraPersonaEmail:r,...e}=o;console.log("Creando nuevo gasto:",e);const n=await k({...e,personaid:e.personaid,escompartido:e.escompartido,porcentajepersona1:e.porcentajepersona1,porcentajepersona2:e.porcentajepersona2,fecha:new Date,usuarioid:d.id});if(a(c=>[...c,n]),e.escompartido&&r){const c=y.find(l=>l.id===e.personaid);if(c)try{console.log("Preparando para enviar email:",{to:r,personaPrincipal:c.nombre,gasto:e});const{data:{session:l}}=await u.auth.getSession(),G=l?.access_token;if(!G)throw new Error("No se pudo obtener el token de acceso");const h=await fetch("https://dasmcjyukwazanjruxzk.supabase.co/functions/v1/send-email",{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${G}`,apikey:"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImRhc21janl1a3dhemFuanJ1eHprIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDYwNzQxMDMsImV4cCI6MjA2MTY1MDEwM30.-VMPQbSK1Zw8vhRLBKjc8m4uZmjRpFg11EPfeS6066w"},body:JSON.stringify({to:r,subject:`Nuevo gasto compartido de ${c.nombre}`,html:`
                    <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
                      <h2>Nuevo gasto compartido</h2>
                      <p>${c.nombre} ha agregado un nuevo gasto compartido:</p>
                      <ul>
                        <li><strong>Descripci√≥n:</strong> ${e.descripcion}</li>
                        <li><strong>Monto:</strong> ${e.monto}</li>
                        <li><strong>Mes:</strong> ${e.mes}</li>
                        <li><strong>Tu porcentaje:</strong> ${e.porcentajepersona2}%</li>
                      </ul>
                      <p>Puedes ver este gasto en tu cuenta.</p>
                    </div>
                  `})});if(h.ok){const w=await h.json();console.log("Email enviado exitosamente:",w)}else{const w=await h.json();console.error("Error al enviar email:",w)}}catch(l){console.error("Error al enviar email:",{error:l,message:l instanceof Error?l.message:"Unknown error",stack:l instanceof Error?l.stack:void 0})}}await v()}catch(r){throw console.error("Error al agregar gasto:",r),r}},eliminarGasto:async o=>{try{await M(o),a(r=>r.filter(e=>e.id!==o))}catch(r){throw console.error("Error al eliminar gasto:",r),r}},actualizarSueldoPersona:async(o,r)=>{try{await A(o,r),f(e=>e.map(n=>n.id===o?{...n,sueldo:r}:n))}catch(e){throw console.error("Error al actualizar sueldo:",e),e}},actualizarNombrePersona:async(o,r)=>{try{await O(o,r),f(e=>e.map(n=>n.id===o?{...n,nombre:r}:n))}catch(e){throw console.error("Error al actualizar nombre:",e),e}},obtenerTotalGastosPorPersona:o=>t.reduce((r,e)=>e.personaid===o?r+e.monto:e.escompartido&&e.porcentajepersona1&&e.porcentajepersona2?r+e.monto*(o==="persona1"?e.porcentajepersona1:e.porcentajepersona2)/100:r,0),calcularPorcentajeGasto:(o,r)=>{const e=o+r;if(e===0)return{porcentajePersona1:50,porcentajePersona2:50};const n=Math.round(o/e*100),c=100-n;return{porcentajePersona1:n,porcentajePersona2:c}},recargarDatos:v,updateUserPreferences:async o=>{try{if(!d){console.error("No user found when updating preferences");return}const r=await T(o);r?z(r):console.error("Failed to update user preferences")}catch(r){console.error("Error al actualizar preferencias:",r)}}};return m?g.jsx(D.Provider,{value:C,children:s}):g.jsx("div",{className:"flex justify-center items-center h-64",children:g.jsx(U,{size:"large",color:"primary"})})}function H(){const s=i.useContext(D);if(s===void 0)throw new Error("useGastos debe ser usado dentro de un GastosProvider");return s}export{X as G,H as u};
