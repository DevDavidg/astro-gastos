import{j}from"./jsx-runtime.D_zvdyIk.js";import{r as d}from"./index.BVOCwoKb.js";import{s as i}from"./supabase.4P1wv7wr.js";import $ from"./LoadingSpinner.D7PxHcXC.js";const q=async()=>{const{data:e,error:s}=await i.from("personas").select("*");if(s)throw console.error("Error al obtener personas:",s),s;return e||[]},I=async()=>{const{data:{user:e},error:s}=await i.auth.getUser();if(s||!e)throw console.error("Error al obtener usuario:",s),new Error("Usuario no autenticado");console.log("Obteniendo gastos para usuario:",e.id),console.log("Email del usuario:",e.email);const{data:a,error:l}=await i.from("gastos").select("*").eq("usuarioid",e.id);if(l)throw console.error("Error al obtener gastos del usuario:",l),l;const{data:p,error:g}=await i.from("gastos").select("*").eq("otrapersonaemail",e.email);if(g)throw console.error("Error al obtener gastos compartidos:",g),g;return[...a||[],...p||[]].filter((c,b,P)=>b===P.findIndex(E=>E.id===c.id)).map(c=>({...c,otraPersonaEmail:c.otrapersonaemail,fecha:new Date(c.fecha),fechaCreacion:c.fechaCreacion?new Date(c.fechaCreacion):void 0,fechaActualizacion:c.fechaActualizacion?new Date(c.fechaActualizacion):void 0}))},A=async e=>{if(!e.usuarioid)throw new Error("El usuario_id es requerido para crear un gasto");console.log("Datos recibidos en crearGasto:",e),console.log("otraPersonaEmail:",e.otraPersonaEmail);const s={mes:e.mes,descripcion:e.descripcion,monto:e.monto,fecha:e.fecha.toISOString().split("T")[0],personaid:e.personaid,escompartido:e.escompartido,porcentajepersona1:e.porcentajepersona1,porcentajepersona2:e.porcentajepersona2,usuarioid:e.usuarioid,otrapersonaemail:e.otraPersonaEmail||null};console.log("Datos a insertar:",s);const{data:a,error:l}=await i.from("gastos").insert(s).select().single();if(l)throw console.error("Error al crear gasto:",l),l;return console.log("Gasto creado en BD:",a),{...a,otraPersonaEmail:a.otrapersonaemail,fecha:new Date(a.fecha),fechaCreacion:a.fechaCreacion?new Date(a.fechaCreacion):void 0,fechaActualizacion:a.fechaActualizacion?new Date(a.fechaActualizacion):void 0}},T=async e=>{try{console.log("Iniciando eliminación de gasto con ID:",e);const{data:{user:s}}=await i.auth.getUser();if(!s)throw new Error("Usuario no autenticado");const{data:a,error:l}=await i.from("gastos").select("*").eq("id",e).single();if(l||!a){console.error("No se encontró el gasto:",l);return}console.log("Gasto encontrado:",a),console.log("Usuario actual:",s.id),console.log("Propietario del gasto:",a.usuarioid);const p=a.usuarioid===s.id,g=a.otrapersonaemail===s.email;if(!p&&!g)throw console.error("El usuario no tiene permisos para eliminar este gasto"),new Error("No tienes permisos para eliminar este gasto");const{error:h}=await i.from("gastos").delete().eq("id",e);if(h)throw console.error("Error al eliminar gasto:",h),h;console.log("Comando de eliminación ejecutado"),await new Promise(c=>setTimeout(c,1e3));const{data:u}=await i.from("gastos").select("id").eq("id",e);if(console.log("Verificación post-eliminación:",u),u&&u.length>0)throw console.error("El gasto sigue existiendo después de la eliminación"),new Error("El gasto no se eliminó correctamente")}catch(s){throw console.error("Error en eliminarGasto:",s),s}},R=async(e,s)=>{const{error:a}=await i.from("personas").update({sueldo:s}).eq("id",e);if(a)throw console.error("Error al actualizar sueldo:",a),a},B=async(e,s)=>{const{error:a}=await i.from("personas").update({nombre:s}).eq("id",e);if(a)throw console.error("Error al actualizar nombre:",a),a},X=async e=>{console.log("Buscando email para personaId:",e);const{data:s,error:a}=await i.rpc("get_user_email_by_persona_id",{persona_id:e});return console.log("Datos de usuario:",s),a?(console.error("Error al obtener email de usuario:",a),null):s||null},z="user_preferences",y={currency:"USD",theme:"light",language:"es"},N=()=>{if(typeof window>"u")return y;const e=localStorage.getItem(z);if(!e)return localStorage.setItem(z,JSON.stringify(y)),y;try{return JSON.parse(e)}catch{return y}},L=e=>{const a={...N(),...e};return localStorage.setItem(z,JSON.stringify(a)),a},v=d.createContext(void 0);function Z({children:e}){const[s,a]=d.useState([]),[l,p]=d.useState([]),[g,h]=d.useState(!0),[u,c]=d.useState(null),[b,P]=d.useState(null),[E,D]=d.useState(!1);d.useEffect(()=>{let t=!0;(async()=>{try{const{data:n}=await i.auth.getSession();t&&(c(n.session?.user||null),D(!0))}catch(n){console.error("Error initializing auth:",n),t&&D(!0)}})();const{data:{subscription:r}}=i.auth.onAuthStateChange((n,w)=>{t&&c(w?.user||null)});return()=>{t=!1,r.unsubscribe()}},[]),d.useEffect(()=>{E&&u&&S()},[u,E]);const S=async()=>{if(u){h(!0);try{const[t,o,r]=await Promise.all([I(),q(),N()]);o&&o.length>0?(a(t),p(o),P(r)):(console.error("No personas found in database"),a([]),p([]))}catch(t){console.error("Error al cargar datos:",t),a([]),p([])}finally{h(!1)}}},G=async()=>{await S()},C={gastos:s,personas:l,isLoading:g,userPreferences:b,agregarGasto:async t=>{if(!u)throw new Error("Usuario no autenticado");try{const{otraPersonaEmail:o,...r}=t;console.log("Creando nuevo gasto:",r),console.log("Email de la otra persona:",o);const n=await A({...r,personaid:r.personaid,escompartido:r.escompartido,porcentajepersona1:r.porcentajepersona1,porcentajepersona2:r.porcentajepersona2,fecha:new Date,usuarioid:u.id,otraPersonaEmail:o});if(console.log("Gasto creado:",n),await G(),r.escompartido&&o){const w=l.find(f=>f.id===r.personaid);if(!w){console.error("No se encontró la persona principal");return}try{const{data:f,error:x}=await i.from("personas").select("usuarioid, email").eq("email",o).maybeSingle();if(console.log("Búsqueda en personas:",f,x),f){console.log("Usuario encontrado en personas:",f);const{error:m}=await i.from("notifications").insert({user_id:f.usuarioid,title:`Nuevo gasto compartido de ${w.nombre}`,message:`${r.descripcion} - Monto: ${r.monto} - Tu porcentaje: ${r.porcentajepersona2}%`});m?console.error("Error al crear notificación:",m):console.log("Notificación creada exitosamente para usuario en personas")}else{console.log("Buscando usuario con email:",o);const{data:m,error:_}=await i.rpc("get_user_id_by_email",{email_input:o});if(console.log("Resultado de búsqueda RPC:",m),console.log("Error de búsqueda RPC:",_),m&&m.length>0){console.log("Usuario encontrado con ID:",m[0].id);const{error:U}=await i.from("notifications").insert({user_id:m[0].id,title:`Nuevo gasto compartido de ${w.nombre}`,message:`${r.descripcion} - Monto: ${r.monto} - Tu porcentaje: ${r.porcentajepersona2}%`});U?console.error("Error al crear notificación:",U):console.log("Notificación creada exitosamente para usuario auth")}else console.log("No se encontró usuario en auth con ese email")}}catch(f){console.error("Error al procesar notificación:",f)}}}catch(o){throw console.error("Error al agregar gasto:",o),o}},eliminarGasto:async t=>{try{a(o=>{const r=o.filter(n=>n.id!==t);return window.dispatchEvent(new CustomEvent("gastoEliminado",{detail:{id:t}})),r}),T(t).catch(o=>{console.error("Error al eliminar el gasto:",o),G()})}catch(o){throw console.error("Error al eliminar el gasto:",o),o}},actualizarSueldoPersona:async(t,o)=>{try{await R(t,o),p(r=>r.map(n=>n.id===t?{...n,sueldo:o}:n))}catch(r){throw console.error("Error al actualizar sueldo:",r),r}},actualizarNombrePersona:async(t,o)=>{try{await B(t,o),p(r=>r.map(n=>n.id===t?{...n,nombre:o}:n))}catch(r){throw console.error("Error al actualizar nombre:",r),r}},obtenerTotalGastosPorPersona:t=>s.reduce((o,r)=>r.personaid===t?o+r.monto:r.escompartido&&r.porcentajepersona1&&r.porcentajepersona2?o+r.monto*(t==="persona1"?r.porcentajepersona1:r.porcentajepersona2)/100:o,0),calcularPorcentajeGasto:(t,o)=>{const r=t+o;if(r===0)return{porcentajePersona1:50,porcentajePersona2:50};const n=Math.round(t/r*100),w=100-n;return{porcentajePersona1:n,porcentajePersona2:w}},recargarDatos:G,updateUserPreferences:async t=>{try{if(!u){console.error("No user found when updating preferences");return}const o=await L(t);o?P(o):console.error("Failed to update user preferences")}catch(o){console.error("Error al actualizar preferencias:",o)}}};return E?j.jsx(v.Provider,{value:C,children:e}):j.jsx("div",{className:"flex justify-center items-center h-64",children:j.jsx($,{size:"large",color:"primary"})})}function ee(){const e=d.useContext(v);if(e===void 0)throw new Error("useGastos debe ser usado dentro de un GastosProvider");return e}export{Z as G,X as o,ee as u};
